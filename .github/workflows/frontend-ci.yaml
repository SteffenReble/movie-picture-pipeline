name: Frontend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - edited
    branches:
      - 'main'
    paths:
      - 'starter/frontend/**'

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Restore cache
        uses: ylemkimon/cache-restore@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node 

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run linting
        run: cd starter/frontend && npm run lint

  test:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Restore cache
        uses: ylemkimon/cache-restore@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node 

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run testing
        run: cd starter/frontend && npm run test --passWithNoTests

  build:

    runs-on: ubuntu-latest

    needs:
      - lint
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Restore cache
        uses: ylemkimon/cache-restore@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node 

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Docker build
        uses: docker/build-push-action@v5
        with:
          context: starter/frontend
          tags: mp-frontend:latest
          build-args: REACT_APP_MOVIE_API_URL=http://localhost:5000
