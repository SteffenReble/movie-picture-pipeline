name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'starter/frontend/**'

env:
  REACT_APP_MOVIE_API_URL: http://localhost:5000
  AWS_REGION: us-east-1

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Restore cache
        uses: ylemkimon/cache-restore@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node 

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run linting
        run: cd starter/frontend && npm run lint

  test:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Restore cache
        uses: ylemkimon/cache-restore@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node 

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run testing
        run: cd starter/frontend && npm run test

  build:

    runs-on: ubuntu-latest

    needs:
      - lint
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Restore cache
        uses: ylemkimon/cache-restore@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node 

      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: starter/frontend
          tags: mp-frontend:latest
          build-args: REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }}
