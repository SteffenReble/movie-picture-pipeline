name: Backend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'starter/backend/**'

env:
  PYTHON_VERSION: 3.8
  AWS_REGION: us-east-1
  AWS_ECR_REPO: backend
  AWS_EKS_CLUSTER: cluster

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install flake8
        run: pip install flake8

      - name: Install dependencies
        run: cd starter/backend && pipenv install

      - name: Run linting
        run: cd starter/backend && pipenv run lint

  test:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: cd starter/backend && pipenv install

      - name: Run testing
        run: cd starter/backend && pipenv run test

  deploy:

    runs-on: ubuntu-latest

    needs:
      - lint
      - test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build and push
        env:
          AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_VERSION: ${{ github.sha }}
        run: |
          docker build -t $AWS_ECR_REGISTRY/$AWS_ECR_REPO:$IMAGE_VERSION ./starter/backend
          docker push $AWS_ECR_REGISTRY/$AWS_ECR_REPO:$IMAGE_VERSION

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $AWS_EKS_CLUSTER

      - name: Kubernetes deploy
        env:
          AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_VERSION: ${{ github.sha }}
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=$AWS_ECR_REGISTRY/$AWS_ECR_REPO:$IMAGE_VERSION
          kustomize build | kubectl apply -f -
